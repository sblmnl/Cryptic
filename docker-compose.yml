services:
  db:
    image: postgres:16.1-alpine
    container_name: cryptic-db
    volumes:
      - cryptic-db:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports: 
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB'"]
      interval: 10s
      timeout: 3s
      retries: 5
    profiles:
      - full
      - api
      - ""
      
  webapi:
    build:
      context: ./src
      dockerfile: ./WebAPI/Dockerfile
    container_name: cryptic-webapi
    volumes:
      - ${CERT_HOST_DIR}/${CERT_FILE}:/https/${CERT_FILE}
    environment:
      - ASPNETCORE_ENVIRONMENT=${APP_ENVIRONMENT}
      - ASPNETCORE_HTTP_PORTS=${WEBAPI_HTTP_PORT}
      - ASPNETCORE_HTTPS_PORTS=${WEBAPI_HTTPS_PORT}
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASSWORD}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/${CERT_FILE}
      - ConnectionStrings__Database=Server=db;Port=5432;Database=${DB_NAME};User Id=${DB_USER};Password=${DB_PASSWORD}
    ports:
      - ${WEBAPI_HTTP_PORT}:${WEBAPI_HTTP_PORT}
      - ${WEBAPI_HTTPS_PORT}:${WEBAPI_HTTPS_PORT}
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - full
      - api

volumes:
  cryptic-db:
